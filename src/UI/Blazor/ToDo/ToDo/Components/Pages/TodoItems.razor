@page "/TodoItems"
@using Services;
@using ToDo.Models
@inject IToDoHttpService httpService;

<PageTitle>Todo Items</PageTitle>

<h1>Todo Items</h1>

<div class="row">
    <div class="col-12">
        <button class="btn btn-primary mb-3" disabled="@IsLoading" @onclick="GenerateTestDataAsync">
            @(IsLoading ? "Loading..." : "Generate test data")
        </button>
    </div>
    <div class="col-12">
        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Category name</th>
                    <th>Create date</th>
                    <th>Details</th>
                </tr>
            </thead>
            <tbody>
                @if (todoItems is null)
                {
                    <tr>
                        <td colspan="4">Loading...</td>
                    </tr>
                }
                else if (!todoItems.Any())
                {
                    <tr>
                        <td >No data found. Please click generate data</td>
                    </tr>
                }
                else
                {
                    @foreach (GetToDoItemsResponse todoItem in todoItems)
                    {
                        <tr>
                            <td>@todoItem.Title</td>
                            <td>@todoItem.Description</td>
                            <td>@todoItem.CategoryName</td>
                            <td>@todoItem.CreatedAt</td>
                            <td></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private GetToDoItemsResponse[]? todoItems;
    private bool processing;
    private bool IsLoading => processing || todoItems == null;


    protected async Task GenerateTestDataAsync()
    {
        processing = true;
        await httpService.GenerateTestDataAsync(1);
        processing = false;
    }

    protected override async Task OnInitializedAsync()
    {
        todoItems = await httpService.GetItemsAsync(50, 1);
    }
}
